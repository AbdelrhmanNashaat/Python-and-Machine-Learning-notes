# -*- coding: utf-8 -*-
"""Study Python.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1B0gkvavY2hP7ZAGIN1c4Nb4LxxpuE-bw
"""

# Handling Files

#to write file path you must use 2 // like that :
file = open ('D:\\new folder\\a.text','w') # open file , take 2 arguments file path and second one is opreation w Is Write

file.write('Write anything in file') #write in file
file.close()

# to add to file we use append
file = open ('file path','a')

# read file
file = open ('file path','r')
for a in file:
  print(a)
file.close()
########################################################################################################################################

# tuple we can't modifiy it or add to it , it useful while using constant data
t = (1,2,3,4) # tuple
########################################################################################################################################

import random as ra
print(ra.random())     # get a random number from 0 to 1
print(ra.randint(0,3)) # get an int number in this range
print(ra.uniform(1,20)) # get a float number in this range
print(ra.randrange(150)) # get an int number from this until this number
print(ra.choice(['a','b','c'])) # choose one element of lsit
print(ra.sample(range(200),10)) # print list of numebers from 0 until the range
########################################################################################################################################

# Numpy
# what is Numpy? numeric python or number python
# is a library responsibel for any mathematical operations
# why Numpy ?  because python is slow programming language take a big size in memory so Numpy solve this 2 problems and returned datatypes


########################################################################################################################################

from numpy import *
a = [2,3,4,5,6]
b = array(a) # convert list into matrix

a1 = [[1,2,3],[4,5,6],[7,8,9]]
b1 = array(a1)
print(b1)

a2 = array([range(i , i+8) for i in [2,4,6,8,10]]) # create matrix in this range
print(a2)

a3 = random.uniform(1,10) # get a random number from 1 to 10
a4 = random.uniform(1,10,20) # get a  20 random numbers from 1 to 10
print(a3)
print('------------------------------')
print(a4)

a5 = random.random((2,3)) # create a matrix of random numbers from 0 to 1
print(a5)

a6 = random.normal(0,1,10) #  Distribute number in normal distribution
print(a6)

a7 = random.randint(150) # get one number random and interger from 0 to 150
print(a7)

a8 = random.randint(10 , size = 7) # get 7 numbers random and interger from 0 to 10
print(a8)

a9 = random.randint(2 , 161, size = 30) # get 30 numbers random and interger from 2 to 160
print(a9)

a10 = random.randint(0 , 11, (3,3)) # 3 * 3 matrix with random int numbers from 0 to 10
print(a10)

a11 = arange(9)
b = a11.reshape(3,3)
c = trace(b) # get sum of diagonal
print(a)
print(b)
print(c)

d = linalg.det(b) # get determinant of matrix
e = linalg.eig(b) # get eigenvalues of matrix
print(d)
print(e)

# numpy
import numpy as np
arr = np.array((1,2,3,4))
print(arr)
print(arr.ndim) # dimension of array
print(arr.size) # size
print(arr.shape) # sahpe here shape is (4,) means 4 and 1 so that means 4 elements in one row
print(arr.dtype) # arr data type

arr2 = np.array((2,4,6,8,10) , dtype = np.float64) # i changed data type into float
arr3 = np.ones((2,2)) # give me array of ones only give it shape parameter
arr4 = np.zeros((4,3))     # give me array of zeros only give it shape parameter

arr5= np.arange(10) # give me array from 0 to 9
arr6 = np.linspace(0,30,31) # start from parameter 1 end in parameter 2 and every element has differance with parameter 3 but withour arrange
print(arr6)
arr7 = np.random.rand(2,3)
print(arr7)
########################################################################################################################################